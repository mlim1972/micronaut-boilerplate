plugins {
    id("groovy") 
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.7.10"
    //id("io.micronaut.test-resources") version "3.7.10"
}

version = "0.1"
group = "com.example"

repositories {
    mavenCentral()
}

dependencies {
    compileOnly("io.micronaut.data:micronaut-data-processor")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    implementation("io.micronaut.flyway:micronaut-flyway")
    implementation("io.micronaut.groovy:micronaut-runtime-groovy")
    implementation("io.micronaut.sql:micronaut-jdbc-tomcat")
    implementation("jakarta.annotation:jakarta.annotation-api")
    compileOnly("io.micronaut:micronaut-http-validation")
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("mysql:mysql-connector-java")
    runtimeOnly("org.flywaydb:flyway-mysql")
    implementation("io.micronaut:micronaut-validation")

//    testImplementation("org.testcontainers:mysql")
//    testImplementation("org.testcontainers:spock")
//    testImplementation("org.testcontainers:testcontainers")

    // Micronaut Data processor
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    // Crypt library for password encoding
    implementation("org.springframework.security:spring-security-crypto:5.7.3")
    // logging compatibility
    runtimeOnly("org.slf4j:jcl-over-slf4j")
    // Temporary H2 DB for testing only
    //testRuntimeOnly("com.h2database:h2")

    // Security for authentication
    annotationProcessor("io.micronaut.security:micronaut-security-annotations")
    implementation("io.micronaut.security:micronaut-security-jwt")

    // Reactor
    implementation("io.micronaut.reactor:micronaut-reactor")
}


application {
    mainClass.set("com.example.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("spock2")
    processing {
        incremental(true)
        annotations("com.example.*")
    }
}




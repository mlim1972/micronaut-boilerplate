global:
  scrape_interval:     30s # By default, scrape targets every 30 seconds.
  evaluation_interval: 30s # By default, scrape targets every 30 seconds.
  # scrape_timeout is set to the global default (10s).

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
    monitor: 'micronaut-boilerplate'

# Load and evaluate rules in this file every 'evaluation_interval' seconds.
rule_files:
# - "alert.rules"
# - "first.rules"
# - "second.rules"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'

    # Override the global default and scrape targets from this job every 30 seconds.
    scrape_interval: 5s

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets: ['localhost:9090','cadvisor:8080','node-exporter:9100']

  - job_name: 'demo-service'
    metrics_path: '/prometheus'
    scrape_interval: 5s
    static_configs:
      - targets: [ 'host.docker.internal:8080' ] # for Docker on MacOS; change to actual host IP if needed.

  - job_name: 'jmx-exporter'
    metrics_path: '/metrics'
    scrape_interval: 5s
    static_configs:
      - targets: ['host.docker.internal:9103'] # for Docker on MacOS; change to actual host IP if needed.
